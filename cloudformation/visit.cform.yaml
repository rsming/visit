Description:  '¯\_(ツ)_/¯ visit cloudformation template.'

Parameters:

  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String

  HotedZoneName:
    Description: Do not forget to add '.' (period) at the end. For example "shrugcoding.click."
    Type: String
    Default: shrugcoding.click.

  Subdomain:
    Type: String
    Default: visit

  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 10.192.0.0/16

  PublicSubnetCIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
    Type: String
    Default: 10.192.10.0/24

Resources:

  visitDNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName : !Ref HotedZoneName
      Name: !Join [ '', [ !Ref Subdomain, ., !Ref HotedZoneName ]]
      TTL: '900'
      Type: A
      ResourceRecords:
      - !GetAtt ec2VisitView.PublicIp

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnetCIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ1)

  ec2VisitView:
    Type: AWS::EC2::Instance
    Properties:
      SubnetId: !Ref PublicSubnet
      KeyName: visit-key
      DisableApiTermination: false
      ImageId: ami-0be2609ba883822ec
      InstanceType: t2.micro
      Monitoring: false
      SecurityGroupIds:
        - !Ref sgVisitView
      UserData: !Base64 |
        #!/bin/bash -ex
        yum update -y
        amazon-linux-extras install docker
        service docker start
        usermod -a -G docker ec2-user
        docker run -d -p 443:443 rsming/visit:1.0
      Tags:
        - Key: Name
          Value: visit.view
        - Key: framework
          Value: static-html

  sgVisitView:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: visit-view-access
      GroupDescription: visit view access
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: visit.view.access
        - Key: access
          Value: frontend

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Routes

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet

  NoIngressSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "no-ingress-sg"
      GroupDescription: "Security group with no ingress rule"
      VpcId: !Ref VPC

Outputs:

  VPC:
    Description: A reference to the created VPC
    Value: !Ref VPC

  PublicSubnets:
    Description: A list of the public subnets
    Value: !Join [ ",", [ !Ref PublicSubnet ]]

  PublicSubnet:
    Description: A reference to the public subnet in the 1st Availability Zone
    Value: !Ref PublicSubnet

  NoIngressSecurityGroup:
    Description: Security group with no ingress rule
    Value: !Ref NoIngressSecurityGroup