pipeline {
    agent none
    parameters {
        booleanParam(name: 'BUILD', defaultValue: true, description: 'Build / deploy visit')
        choice(name: 'AWS_VISIT_APP_STACK', choices: ['deploy', 'destroy'], description: 'Create/destroy AWS visit application stack')
    }
    environment {
        VISIT_DOCKER_IMAGE    ="rsming/visit:1.0"
        AWS_ACCESS_KEY_ID     = credentials('jenkins-aws-secret-key-id')
        AWS_SECRET_ACCESS_KEY = credentials('jenkins-aws-secret-access-key')
        AWS_ENV_NAME = 'dev'
        AWS_REGION   = 'us-east-1'
        AWS_NETWORK_STACK_NAME = 'shrugcoding-network'
        AWS_APP_STACK_NAME     = 'visit'
    }
    stages {
        stage('build') {
            when { expression { return params.BUILD } }
            agent any
            steps {
                script {
                    docker.withRegistry('', 'dockerhub') {
                        docker build --tag ${VISIT_DOCKER_IMAGE} dockerfile
                        docker push ${VISIT_DOCKER_IMAGE}
                    }
                }
            }
        }
        stage('aws') {
            agent {
                dockerfile {
                    filename 'dockerfile'
                    dir 'cloudformation'
                    args "--env AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} --env AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}"
                    reuseNode true
                }
            }
            steps {
                dir('cloudformation') {
                    script {
                        if (params.AWS_VISIT_APP_STACK == 'deploy') {
                            sh """
                                aws cloudformation deploy --parameter-overrides EnvironmentName=${AWS_ENV_NAME} \
                                    --region ${AWS_REGION} --template-file networkstack.cform.json \
                                    --stack-name ${AWS_NETWORK_STACK_NAME}
                                aws cloudformation wait stack-create-complete --region ${AWS_REGION} --stack-name $AWS_NETWORK_STACK_NAME
                            """
                        }
                        if (params.AWS_VISIT_APP_STACK == 'destroy') {
                            sh """
                                aws cloudformation delete-stack --region ${AWS_REGION} --stack-name ${AWS_NETWORK_STACK_NAME}
                                aws cloudformation wait stack-delete-complete --region ${AWS_REGION} --stack-name ${AWS_NETWORK_STACK_NAME}
                            """
                        }
                    }
                }
            }
        }
    }
}